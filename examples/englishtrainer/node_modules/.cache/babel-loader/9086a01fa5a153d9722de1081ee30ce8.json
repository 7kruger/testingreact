{"ast":null,"code":"var _jsxFileName = \"E:\\\\VSCODE\\\\englishtrainer\\\\src\\\\components\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  let {\n    listwords\n  } = _ref;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isPushed, setIsPushed] = useState(false);\n  const [words, setWords] = useState(listwords);\n  const [word, setWord] = useState([]);\n  useEffect(() => {// setWords(listwords);\n    // setIsLoaded(true);\n    // console.log(words);\n    // loadNewWord();\n  }, []);\n\n  function loadNewWord() {\n    setWord(words);\n    setIsPushed(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_block\",\n    children: !isLoaded ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isPushed ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: word.eng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsPushed(true),\n          children: \"\\u041F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: word.eng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: word.rus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => loadNewWord(),\n            children: \"\\u0414\\u0430\\u043B\\u044C\\u0448\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"wx+dQCGdJxtG+8TuaRT9Ed9swKk=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","Main","listwords","isLoaded","setIsLoaded","isPushed","setIsPushed","words","setWords","word","setWord","loadNewWord","eng","rus"],"sources":["E:/VSCODE/englishtrainer/src/components/Main.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nfunction Main({ listwords }) {\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [isPushed, setIsPushed] = useState(false);\r\n    const [words, setWords] = useState(listwords);\r\n    const [word, setWord] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // setWords(listwords);\r\n        // setIsLoaded(true);\r\n        // console.log(words);\r\n        // loadNewWord();\r\n    }, []);\r\n\r\n    function loadNewWord() {\r\n        setWord(words);\r\n        setIsPushed(false);\r\n    }\r\n\r\n    return (\r\n        <div className='main_block'>\r\n            {!isLoaded\r\n                ? <h2>Загрузка...</h2>\r\n                :<div>\r\n                    {isPushed\r\n                    ? \r\n                        <div>\r\n                            <h2>{word.eng}</h2>\r\n                            <button onClick={() => setIsPushed(true)}>Перевод</button>\r\n                        </div>\r\n                    : \r\n                        <div>\r\n                            <h2>{word.eng}</h2>\r\n                            <h2>{word.rus}</h2>\r\n                            <div>\r\n                                <button onClick={() => loadNewWord()}>Дальше</button>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,IAAT,OAA6B;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EAEzB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACE,SAAD,CAAlC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;EAEAD,SAAS,CAAC,MAAM,CACZ;IACA;IACA;IACA;EACH,CALQ,EAKN,EALM,CAAT;;EAOA,SAASY,WAAT,GAAuB;IACnBD,OAAO,CAACH,KAAD,CAAP;IACAD,WAAW,CAAC,KAAD,CAAX;EACH;;EAED,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA,UACK,CAACH,QAAD,gBACK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADL,gBAEI;MAAA,UACIE,QAAQ,gBAEL;QAAA,wBACI;UAAA,UAAKI,IAAI,CAACG;QAAV;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,OAAO,EAAE,MAAMN,WAAW,CAAC,IAAD,CAAlC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFK,gBAOL;QAAA,wBACI;UAAA,UAAKG,IAAI,CAACG;QAAV;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UAAKH,IAAI,CAACI;QAAV;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAA,uBACI;YAAQ,OAAO,EAAE,MAAMF,WAAW,EAAlC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA;IARP;MAAA;MAAA;MAAA;IAAA;EAHT;IAAA;IAAA;IAAA;EAAA,QADJ;AAwBH;;GA3CQV,I;;KAAAA,I;AA6CT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}