{"ast":null,"code":"var _jsxFileName = \"E:\\\\VSCODE\\\\englishtrainer\\\\src\\\\components\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  let {\n    words\n  } = _ref;\n  const [isPushed, setIsPushed] = useState(false);\n  const [word, setWord] = useState(); // как вариант передавать весь массив слов и уже тут выбирать рандомно слова\n\n  useEffect(() => {\n    setWord(getNewWord());\n  }, []);\n\n  function loadNewWord(word) {\n    setWord(getNewWord());\n    setIsPushed(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_block\",\n    children: isPushed ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: word.eng\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsPushed(true),\n        children: \"\\u041F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: word.eng\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: word.rus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => loadNewWord(),\n          children: \"\\u0414\\u0430\\u043B\\u044C\\u0448\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"WkDIyc94ryu900zVqZ4im96sfAw=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","Main","words","isPushed","setIsPushed","word","setWord","getNewWord","loadNewWord","eng","rus"],"sources":["E:/VSCODE/englishtrainer/src/components/Main.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nfunction Main({ words }) {\r\n\r\n    const [isPushed, setIsPushed] = useState(false);\r\n    const [word, setWord] = useState();\r\n\r\n    // как вариант передавать весь массив слов и уже тут выбирать рандомно слова\r\n    useEffect(() => {\r\n        setWord(getNewWord());\r\n    }, []);\r\n\r\n    function loadNewWord(word) {\r\n        setWord(getNewWord());\r\n        setIsPushed(false);\r\n    }\r\n\r\n    return (\r\n        <div className='main_block'>\r\n            {isPushed\r\n                ? \r\n                    <div>\r\n                        <h2>{word.eng}</h2>\r\n                        <button onClick={() => setIsPushed(true)}>Перевод</button>\r\n                    </div>\r\n                : \r\n                    <div>\r\n                        <h2>{word.eng}</h2>\r\n                        <h2>{word.rus}</h2>\r\n                        <div>\r\n                            <button onClick={() => loadNewWord()}>Дальше</button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,IAAT,OAAyB;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EAErB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC,CAHqB,CAKrB;;EACAD,SAAS,CAAC,MAAM;IACZO,OAAO,CAACC,UAAU,EAAX,CAAP;EACH,CAFQ,EAEN,EAFM,CAAT;;EAIA,SAASC,WAAT,CAAqBH,IAArB,EAA2B;IACvBC,OAAO,CAACC,UAAU,EAAX,CAAP;IACAH,WAAW,CAAC,KAAD,CAAX;EACH;;EAED,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA,UACKD,QAAQ,gBAED;MAAA,wBACI;QAAA,UAAKE,IAAI,CAACI;MAAV;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,OAAO,EAAE,MAAML,WAAW,CAAC,IAAD,CAAlC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFC,gBAOD;MAAA,wBACI;QAAA,UAAKC,IAAI,CAACI;MAAV;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAKJ,IAAI,CAACK;MAAV;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,uBACI;UAAQ,OAAO,EAAE,MAAMF,WAAW,EAAlC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EARZ;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GAlCQP,I;;KAAAA,I;AAoCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}